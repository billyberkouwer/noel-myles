/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.2 public/meshes/terrain.gltf --transform
*/

import React, { useEffect, useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { Euler } from '@react-three/fiber';
import { GLTF } from "three-stdlib";
import { Material, Mesh } from 'three';

type GLTFResult = GLTF & {
    nodes: {
      'gorse-emitter': Mesh; 
    };
    materials: {
      'Material.002': Material;
    };
  };

export default function GorseEmitter({rotation}: {rotation?: Euler}) {
  const { nodes, materials } = useGLTF('/gltf/gorse-emitter.gltf') as GLTFResult;

  useEffect(() => {
    materials['Material.002'].needsUpdate = true;
  }, [materials])
  
  return (
      <mesh geometry={nodes['gorse-emitter'].geometry} material={materials['Material.002']} rotation={rotation} receiveShadow scale={[1,1,1]} />
  )
}

useGLTF.preload('/gltf/gorse-emitter.gltf')
